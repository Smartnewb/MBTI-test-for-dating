<context>
# Overview
'달빛 연애 연구소'(Moonlight Dating Lab)는 사용자의 MBTI 유형을 분석하여 연애 스타일과 이상형을 제안하는 웹 애플리케이션입니다. 이 서비스는 타로 카드와 신비로운 분위기의 디자인을 통해 사용자에게 재미있는 경험을 제공하며, 자신의 연애 성향을 이해하고 더 나은 관계를 형성하는 데 도움을 줍니다.

# Core Features
1. MBTI 테스트
   - 연애 상황에 특화된 24개의 질문을 통해 사용자의 MBTI 유형을 분석
   - 각 질문은 E/I, S/N, F/T, J/P 네 가지 축에 대해 각각 6개씩 구성
   - 사용자 친화적인 UI로 쉽고 재미있게 테스트 진행 가능

2. 연애 성향 분석
   - 16가지 MBTI 유형별 연애 스타일, 장단점, 특징을 상세히 설명
   - 타로 카드 컨셉의 시각적 요소를 활용한 결과 표현
   - 사용자의 연애 패턴과 선호도에 대한 인사이트 제공

3. 이상형 매칭
   - MBTI 궁합 이론을 바탕으로 사용자에게 가장 잘 맞는 이상형 MBTI 추천
   - 궁합이 좋은 유형과의 관계 특성 및 발전 방향 제시
   - 실제 데이팅에 활용할 수 있는 실용적인 조언 제공

4. 결과 공유 기능
   - SNS 플랫폼을 통해 테스트 결과를 쉽게 공유할 수 있는 기능
   - 공유 시 시각적으로 매력적인 카드 형태의 이미지 생성
   - 바이럴 마케팅 효과를 통한 서비스 확산 유도

# User Experience
1. 사용자 페르소나
   - 주 타겟: 20-30대 연애에 관심 있는 젊은 층
   - MBTI와 심리 테스트에 흥미를 가진 사용자
   - 자신의 연애 패턴을 이해하고 개선하고자 하는 사람들

2. 핵심 사용자 흐름
   - 인트로 페이지 → MBTI 테스트 → 결과 분석 → 이상형 매칭 → 결과 공유
   - 직관적이고 단계적인 UI로 사용자가 쉽게 테스트를 완료할 수 있도록 설계
   - 각 단계마다 시각적 피드백과 진행률 표시로 사용자 참여 유도

3. UI/UX 고려사항
   - 타로 카드와 신비로운 분위기의 디자인 컨셉 적용
   - 보라색, 남색, 금색 등 신비로운 색상 팔레트 사용
   - 별, 달, 카드 등의 일러스트 요소를 활용한 매력적인 시각적 경험 제공
   - 모바일 우선 반응형 디자인으로 다양한 디바이스에서 최적의 경험 보장
</context>
<PRD>
# Technical Architecture
1. 시스템 구성 요소
   - 프론트엔드: Next.js (App Router), Material UI, Tanstack Query
   - 백엔드: Supabase (인증, 데이터베이스, 스토리지)
   - 상태 관리: React Context API 또는 Zustand
   - 배포: Vercel

2. 데이터 모델
   - Questions: MBTI 테스트 질문 및 선택지 정보
   - UserResponses: 사용자의 테스트 응답 데이터
   - MBTITypes: 16가지 MBTI 유형 정보 및 설명
   - Compatibility: MBTI 유형 간 궁합 정보
   - Users: 사용자 정보 (선택적 로그인 시)

3. API 및 통합
   - Supabase API: 데이터 저장 및 조회
   - SNS 공유 API: 카카오톡, 페이스북, 트위터 등
   - 이미지 생성 및 처리: 결과 카드 생성

4. 인프라 요구사항
   - Vercel 호스팅
   - Supabase 프로젝트 설정
   - 도메인 및 SSL 인증서

# Development Roadmap
1. MVP 요구사항
   - 기본 프로젝트 설정 및 기술 스택 구성
   - 데이터베이스 스키마 설계
   - 인트로 페이지 개발
   - MBTI 테스트 질문 구현
   - MBTI 분석 알고리즘 개발
   - 기본 결과 페이지 UI 개발
   - 반응형 디자인 구현

2. 향후 개선사항
   - MBTI 유형별 상세 연애 성향 컨텐츠 개발
   - MBTI 궁합 매칭 시스템 고도화
   - SNS 공유 기능 개발
   - 애니메이션 및 시각 효과 개선
   - 분석 및 모니터링 시스템 구현
   - 사용자 계정 및 결과 저장 기능
   - 추가 심리 테스트 컨텐츠 확장

# Logical Dependency Chain
1. 기반 기능 (우선 개발)
   - 프로젝트 초기 설정 및 기술 스택 구성
   - 데이터베이스 스키마 설계
   - 기본 UI 컴포넌트 및 디자인 시스템 구축

2. 핵심 기능 (사용 가능한 프론트엔드)
   - 인트로 페이지 개발
   - MBTI 테스트 질문 구현
   - MBTI 분석 알고리즘 개발
   - 결과 페이지 UI 개발

3. 확장 기능 (점진적 개선)
   - MBTI 유형별 연애 성향 컨텐츠 개발
   - MBTI 궁합 매칭 시스템 개발
   - SNS 공유 기능 개발
   - 애니메이션 및 시각 효과 구현
   - 반응형 디자인 구현
   - 분석 및 모니터링 시스템 구현
   - 배포 및 출시 준비

# Risks and Mitigations
1. 기술적 도전
   - 리스크: Next.js App Router 학습 곡선
   - 완화: 공식 문서 및 튜토리얼 참조, 단계적 구현

   - 리스크: Supabase 연동 및 데이터 모델링 복잡성
   - 완화: 명확한 스키마 설계, 초기 프로토타입 테스트

2. MVP 정의
   - 리스크: 기능 범위 확장으로 인한 개발 지연
   - 완화: 명확한 MVP 정의 및 우선순위 설정, 단계적 개발 접근

   - 리스크: 사용자 경험과 기능 간의 균형
   - 완화: 사용자 중심 설계, 핵심 기능에 집중

3. 자원 제약
   - 리스크: 디자인 리소스 부족
   - 완화: Material UI 활용, 기본 템플릿 및 컴포넌트 사용

   - 리스크: 컨텐츠 개발 시간 소요
   - 완화: 단계적 컨텐츠 확장, 초기 버전은 핵심 내용에 집중

# Appendix
1. 연구 결과
   - MBTI 유형별 연애 성향 참고 자료
   - 타로 카드 디자인 및 상징성 연구
   - 유사 서비스 분석 및 차별화 포인트

2. 기술 명세
   - Next.js App Router 구조
   - Supabase 스키마 상세 설계
   - Material UI 테마 커스터마이징
   - 반응형 디자인 브레이크포인트
   - 애니메이션 및 전환 효과 상세 명세
</PRD>
